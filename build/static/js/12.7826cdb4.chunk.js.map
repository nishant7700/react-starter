{"version":3,"sources":["Pages/Checkout.js","components/Form/Form.js"],"names":["mapDispatchToProps","login","register","editUser","getCart","connect","state","alert","auth","cart","order","user","history","useState","step","setStep","address","setAddress","paymentMethod","setPaymentMethod","orderPlaced","setOrderPlaced","useEffect","a","totalAmount","setTotalAmount","total","map","item","sale_price","quantity","placeOrder","console","log","_id","id","newForm","customer","products","payment_method","is_paid","order_status","total_amount","product_total","api","post","newOrderSaved","data","localStorage","removeItem","push","orderid","axios","get","options","key","amount","currency","name","description","image","order_id","handler","response","savePaidOrder","prefill","email","contact","phone","theme","color","rzp1","window","Razorpay","on","open","title","length","className","style","margin","class","initialValues","password","validationSchema","Yup","required","onSubmit","values","setSubmitting","resetForm","formData","identifier","formik","label","type","placeholder","to","alertType","msg","marginTop","isSubmitting","role","confirm_password","matches","min","max","oneOf","username","value","onChange","handleChange","touched","errors","index","marginBottom","border","padding","address_1","address_2","landmark","city","pincode","onClick","address_new","filter","num","selectAddeess","innerWidth","featured_image","src","URI","alt","width","height","objectFit","data-title","size","parseFloat","toFixed","background","paddingBottom","defaultValue","defaultChecked","e","target","checked","htmlFor","SelectBox","props","useField","field","meta","error","TextInput","TextArea"],"mappings":"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","file":"static/js/12.7826cdb4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Breadcrumb from \"../components/Breadcrumb\";\r\nimport Footer from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\nimport axios from \"axios\";\r\n\r\nimport { URI } from \"../constants/constants\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Formik, FieldArray } from \"formik\";\r\nimport api from \"../utils/api\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  TextInput,\r\n  SelectBox,\r\n  TextArea,\r\n  CheckBox,\r\n} from \"../components/Form/Form\";\r\nimport { editUser, login, register } from \"../actions/auth\";\r\nimport { getCart } from \"../actions/cart\";\r\n\r\nconst Checkout = ({\r\n  alert,\r\n  login,\r\n  register,\r\n  getCart,\r\n  auth: { user },\r\n  cart: { cart },\r\n  history,\r\n  editUser,\r\n}) => {\r\n  const [step, setStep] = useState(1);\r\n  const [address, setAddress] = useState(null);\r\n  const [paymentMethod, setPaymentMethod] = useState(\"CASH_ON_DELIVERY\");\r\n  const [orderPlaced, setOrderPlaced] = useState(false);\r\n  useEffect(async () => {\r\n    if (user) {\r\n      setStep(2);\r\n    }\r\n  }, [user]);\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n  useEffect(() => {\r\n    let total = 0;\r\n\r\n    if (cart) {\r\n      cart.map((item) => {\r\n        total = total + item.sale_price * item.quantity;\r\n      });\r\n    }\r\n\r\n    setTotalAmount(total);\r\n  }, [cart, totalAmount]);\r\n  const placeOrder = async () => {\r\n    setOrderPlaced(true);\r\n\r\n    if (paymentMethod === \"CASH_ON_DELIVERY\") {\r\n      if (cart) {\r\n        console.log(cart);\r\n        address._id && delete address._id;\r\n        address.id && delete address.id;\r\n        let newForm = {\r\n          address: address,\r\n          customer: user.id,\r\n          products: cart,\r\n          payment_method: paymentMethod,\r\n          is_paid: false,\r\n          order_status: \"PROCESSING\",\r\n          total_amount: totalAmount,\r\n          product_total: totalAmount,\r\n        };\r\n\r\n        // await addOrder(newForm);\r\n        const newOrderSaved = await api.post(`/orders`, newForm);\r\n        if (newOrderSaved.data) {\r\n          // await savePaidOrder(newOrderSaved.data._id, newOrderSaved.data);\r\n          localStorage.removeItem(\"CART\");\r\n          getCart();\r\n          setOrderPlaced(false);\r\n          history.push(\r\n            `/order-placed?orderid=${newOrderSaved.data.orderid}&total_amount=${newForm.total_amount}`\r\n          );\r\n\r\n          //   localStorage.removeItem(\"CART\");\r\n          //   getCart();\r\n          //   setOrderPlaced(false);\r\n          //   history.push(\"/order-placed\");\r\n        }\r\n      }\r\n    }\r\n    if (paymentMethod === \"RAZORPAY\") {\r\n      address._id && delete address._id;\r\n      address.id && delete address.id;\r\n      let newForm = {\r\n        address: address,\r\n        customer: user.id,\r\n        products: cart,\r\n        payment_method: paymentMethod,\r\n        is_paid: false,\r\n        order_status: \"PENDING\",\r\n        total_amount: totalAmount,\r\n        product_total: totalAmount,\r\n      };\r\n      const newOrderSaved = await api.post(`/orders`, newForm);\r\n\r\n      if (newOrderSaved.data) {\r\n        const order = await axios.get(\r\n          `https://rejuvaplus.com/razorpay/razorpay/pay.php?amount=${totalAmount}`\r\n        );\r\n        var options = {\r\n          key: \"rzp_live_cTxrV4ZQyjOnp2\", // Enter the Key ID generated from the Dashboard\r\n          amount: totalAmount * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n          currency: \"INR\",\r\n          name: \"Rejuva Plus\",\r\n          description: \"\",\r\n          image: \"https://rejuvaplus.com/images/logo.png\",\r\n          order_id: order.data, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n          handler: async function (response) {\r\n            if (cart) {\r\n              newOrderSaved.data.order_status = \"PROCESSING\";\r\n              newOrderSaved.data.is_paid = true;\r\n              await savePaidOrder(newOrderSaved.data._id, newOrderSaved.data);\r\n              localStorage.removeItem(\"CART\");\r\n              getCart();\r\n              setOrderPlaced(false);\r\n              history.push(\r\n                `/order-placed?orderid=${newOrderSaved.data.orderid}&total_amount=${newForm.total_amount}`\r\n              );\r\n              //   localStorage.removeItem(\"CART\");\r\n              //   getCart();\r\n              //   setOrderPlaced(false);\r\n              //   history.push(\"/order-placed\");\r\n            }\r\n          },\r\n          prefill: {\r\n            name: `${address && address.name}`,\r\n            email: user && user.email,\r\n            contact: address && address.phone,\r\n          },\r\n          theme: {\r\n            color: \"#3399cc\",\r\n          },\r\n        };\r\n        var rzp1 = new window.Razorpay(options);\r\n        rzp1.on(\"payment.failed\", function (response) {\r\n          alert(\"Payment Failed Please try again\");\r\n        });\r\n        rzp1.open();\r\n      }\r\n    }\r\n  };\r\n  const selectAddeess = (index) => {\r\n    const address = user.address ? user.address : null;\r\n    const filteredData = address.filter((item, num) => num === index);\r\n    const address_new = filteredData[0];\r\n    if (address_new) {\r\n      setAddress(address_new);\r\n      setStep(3);\r\n    }\r\n  };\r\n  // const loginWithFacebook = () => {\r\n  //   localStorage.setItem(\"from_URL\", \"/checkout\");\r\n  //   window.location.href = \"https://api.anysa.in/connect/facebook\";\r\n  // };\r\n  // const loginWithGoogle = () => {\r\n  //   localStorage.setItem(\"from_URL\", \"/checkout\");\r\n  //   window.location.href = \"https://api.anysa.in/connect/google\";\r\n  // };\r\n  return (\r\n    <div>\r\n      <Header></Header>\r\n      <Breadcrumb title=\"Checkout\" />\r\n      {cart && cart.length > 0 ? (\r\n        <div>\r\n          {step === 1 && (\r\n            <div className=\"coupon-area\" style={{ margin: \"20px 0px\" }}>\r\n              <div>\r\n                <div className=\"container\">\r\n                  <div className=\"account-content-area\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <h1 className=\"page-heading\">Procced to Checkout</h1>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      {/* Sign-in */}\r\n                      <div className=\"col-md-6 col-sm-6 \">\r\n                        <div className=\"register-form-content\">\r\n                          <h3 class=\"page-subheading\">Already Registered</h3>\r\n\r\n                          <div className=\"register-form outer-top-xs\">\r\n                            <Formik\r\n                              initialValues={{\r\n                                email: \"\",\r\n                                password: \"\",\r\n                              }}\r\n                              validationSchema={Yup.object({\r\n                                email: Yup.string().required(\"Required\"),\r\n                                password: Yup.string().required(\"Required\"),\r\n                              })}\r\n                              onSubmit={async (\r\n                                values,\r\n                                { setSubmitting, resetForm }\r\n                              ) => {\r\n                                setSubmitting(true);\r\n                                console.log(\"Submitted\");\r\n                                console.log(values);\r\n                                const formData = {\r\n                                  identifier: values.email,\r\n                                  password: values.password,\r\n                                };\r\n\r\n                                await login(formData);\r\n                                resetForm();\r\n                                setSubmitting(false);\r\n                              }}\r\n                            >\r\n                              {(formik) => {\r\n                                console.log(formik);\r\n                                return (\r\n                                  <Form>\r\n                                    <div>\r\n                                      <div className=\"mb-3\">\r\n                                        <TextInput\r\n                                          label=\"Email\"\r\n                                          name=\"email\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"Enter Email\"\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"mb-3\">\r\n                                        <TextInput\r\n                                          label=\"Password\"\r\n                                          name=\"password\"\r\n                                          type=\"password\"\r\n                                          placeholder=\"Enter Password\"\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"mb-3\">\r\n                                        <Link to=\"/forget-password\">\r\n                                          Forgot Password ?\r\n                                        </Link>\r\n                                      </div>\r\n                                      {alert &&\r\n                                        alert.map((item) => {\r\n                                          return (\r\n                                            <div\r\n                                              className={`text-${item.alertType}`}\r\n                                            >\r\n                                              {\" \"}\r\n                                              {item.msg}{\" \"}\r\n                                            </div>\r\n                                          );\r\n                                        })}\r\n                                      <div\r\n                                        className=\"shopp-now\"\r\n                                        style={{ marginTop: \"10px\" }}\r\n                                      >\r\n                                        <button\r\n                                          type=\"submit\"\r\n                                          className=\"btn btn-purchase\"\r\n                                        >\r\n                                          <span>\r\n                                            <i class=\"fa fa-lock\"></i>\r\n                                            {\"  \"}\r\n                                            {formik.isSubmitting\r\n                                              ? \"Processing...\"\r\n                                              : \"Login\"}\r\n                                          </span>\r\n                                        </button>\r\n                                      </div>\r\n                                    </div>\r\n                                  </Form>\r\n                                );\r\n                              }}\r\n                            </Formik>\r\n                          </div>\r\n                          <hr />\r\n                          {/* <h4> OR </h4> */}\r\n                          <div className=\"social-sign-in outer-top-xs\">\r\n                            {/* <div style={{ marginBottom: \"10px\" }}>\r\n                              <a onClick={() => loginWithFacebook()}>\r\n                                <div className=\"social-image\">\r\n                                  <img src=\"/img/facebook.png\" />\r\n                                </div>\r\n                              </a>\r\n                            </div> */}\r\n                            {/* <div>\r\n                              <a onClick={() => loginWithGoogle()}>\r\n                                <div className=\"social-image\">\r\n                                  <img src=\"/img/google.png\" />\r\n                                </div>\r\n                              </a>\r\n                            </div> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* Sign-in */}\r\n                      {/* create a new account */}\r\n                      <div className=\"col-md-6 col-sm-6 \">\r\n                        <div className=\"register-form-content\">\r\n                          <h3 class=\"page-subheading\">Create an account</h3>\r\n\r\n                          <div\r\n                            className=\"register-form outer-top-xs\"\r\n                            role=\"form\"\r\n                          >\r\n                            <Formik\r\n                              initialValues={{\r\n                                email: \"\",\r\n                                name: \"\",\r\n                                phone: \"\",\r\n                                password: \"\",\r\n                                confirm_password: \"\",\r\n                              }}\r\n                              validationSchema={Yup.object({\r\n                                email: Yup.string().required(\"Required\"),\r\n                                name: Yup.string().required(\"Required\"),\r\n                                password: Yup.string().required(\"Required\"),\r\n                                phone: Yup.string()\r\n                                  .required(\"Required\")\r\n                                  .matches(/^[0-9]+$/, \"Must be only digits\")\r\n                                  .min(10, \"Must be exactly 10 digits\")\r\n                                  .max(10, \"Must be exactly 10 digits\"),\r\n                                confirm_password: Yup.string()\r\n                                  .required(\"Required\")\r\n                                  .oneOf(\r\n                                    [Yup.ref(\"password\"), null],\r\n                                    \"Passwords must match\"\r\n                                  ),\r\n                              })}\r\n                              onSubmit={async (\r\n                                values,\r\n                                { setSubmitting, resetForm }\r\n                              ) => {\r\n                                setSubmitting(true);\r\n                                console.log(\"Submitted\");\r\n                                console.log(values);\r\n\r\n                                const formData = {\r\n                                  username: values.email,\r\n                                  email: values.email,\r\n                                  password: values.password,\r\n                                  name: values.name,\r\n                                  phone: values.phone,\r\n                                };\r\n                                await register(formData);\r\n                                resetForm();\r\n                                setSubmitting(false);\r\n                              }}\r\n                            >\r\n                              {(formik) => {\r\n                                console.log(formik);\r\n                                return (\r\n                                  <Form>\r\n                                    <div>\r\n                                      <div className=\"mb-3\">\r\n                                        <TextInput\r\n                                          label=\"Name\"\r\n                                          name=\"name\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"Enter Name\"\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"mb-3\">\r\n                                        <TextInput\r\n                                          label=\"Email\"\r\n                                          name=\"email\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"Enter Email\"\r\n                                        />\r\n                                      </div>\r\n\r\n                                      <div className=\"mb-3\">\r\n                                        <TextInput\r\n                                          label=\"Password\"\r\n                                          name=\"password\"\r\n                                          type=\"password\"\r\n                                          placeholder=\"Enter Password\"\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"mb-3\">\r\n                                        <TextInput\r\n                                          label=\"Confirm Password\"\r\n                                          name=\"confirm_password\"\r\n                                          type=\"password\"\r\n                                          placeholder=\"Enter Confirm Password\"\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"mb-3\">\r\n                                        <label> Phone </label>\r\n                                        <input\r\n                                          name=\"phone\"\r\n                                          type=\"text\"\r\n                                          value={formik.values.phone}\r\n                                          className=\"form-control\"\r\n                                          onChange={formik.handleChange}\r\n                                          placeholder=\"Enter Phone\"\r\n                                        />\r\n                                      </div>\r\n                                      {formik.touched.phone &&\r\n                                      formik.errors.phone ? (\r\n                                        <div className=\"text-danger\">\r\n                                          {formik.errors.phone}\r\n                                        </div>\r\n                                      ) : null}\r\n\r\n                                      {alert &&\r\n                                        alert.map((item) => {\r\n                                          return (\r\n                                            <p\r\n                                              className={`text-${item.alertType}`}\r\n                                            >\r\n                                              {\" \"}\r\n                                              {item.msg}{\" \"}\r\n                                            </p>\r\n                                          );\r\n                                        })}\r\n                                      <div className=\"mt-4 shopp-now\">\r\n                                        <button\r\n                                          type=\"submit\"\r\n                                          className=\"btn btn-purchase\"\r\n                                        >\r\n                                          <span>\r\n                                            <i class=\"fa fa-user left\"></i>\r\n                                            {\"  \"}\r\n                                            {formik.isSubmitting\r\n                                              ? \"Processing...\"\r\n                                              : \"Create an account\"}\r\n                                          </span>\r\n                                        </button>\r\n                                      </div>\r\n                                    </div>\r\n                                  </Form>\r\n                                );\r\n                              }}\r\n                            </Formik>\r\n                          </div>\r\n                          <hr />\r\n                          {/* <h4> OR </h4> */}\r\n                          <div className=\"social-sign-in outer-top-xs\">\r\n                            {/* <div style={{ marginBottom: \"10px\" }}>\r\n                              <a onClick={() => loginWithFacebook()}>\r\n                                <div className=\"social-image\">\r\n                                  <img src=\"/img/facebook.png\" />\r\n                                </div>\r\n                              </a>\r\n                            </div> */}\r\n                            {/* <div>\r\n                              <a onClick={() => loginWithGoogle()}>\r\n                                <div className=\"social-image\">\r\n                                  <img src=\"/img/google.png\" />\r\n                                </div>\r\n                              </a>\r\n                            </div> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* create a new account */}{\" \"}\r\n                    </div>\r\n\r\n                    {/* /.row */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {step === 2 && (\r\n            <div class=\"checkout-area\">\r\n              <div class=\"container\">\r\n                <div className=\"row\">\r\n                  <div class=\"col-lg-6 col-md-6 col-sm-12\">\r\n                    <div className=\" create-new-account\">\r\n                      <div>\r\n                        <h3 class=\"page-subheading\">2. Billing Details</h3>\r\n                        <div className=\"row\">\r\n                          {user &&\r\n                            user.address &&\r\n                            user.address.map((item, index) => {\r\n                              return (\r\n                                <div\r\n                                  className=\"col-md-6\"\r\n                                  style={{ marginBottom: \"10px\" }}\r\n                                >\r\n                                  <div\r\n                                    style={{\r\n                                      border: \"1px solid #d1d1d1\",\r\n                                      padding: \"10px 20px\",\r\n                                    }}\r\n                                  >\r\n                                    <div> {item.address_1} </div>\r\n                                    <div> {item.address_2} </div>\r\n                                    <div> {item.landmark} </div>\r\n                                    <div> {item.city} </div>\r\n                                    <div> {item.state} </div>\r\n                                    <div> {item.pincode} </div>\r\n                                    <div>\r\n                                      <button\r\n                                        className=\"btn btn-success\"\r\n                                        onClick={() => selectAddeess(index)}\r\n                                      >\r\n                                        Select\r\n                                      </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                        <hr />\r\n                        <div>\r\n                          <div className=\"\">\r\n                            <Formik\r\n                              initialValues={{\r\n                                address_1: \"\",\r\n                                address_2: \"\",\r\n                                landmark: \"\",\r\n                                city: \"\",\r\n                                state: \"\",\r\n                                pincode: \"\",\r\n                              }}\r\n                              validationSchema={Yup.object({\r\n                                pincode: Yup.string()\r\n                                  .required(\"Required\")\r\n                                  .matches(/^[0-9]+$/, \"Must be only digits\")\r\n                                  .min(6, \"Must be exactly 6 digits\")\r\n                                  .max(6, \"Must be exactly 6 digits\"),\r\n\r\n                                address_1: Yup.string().required(\"Required\"),\r\n\r\n                                city: Yup.string().required(\"Required\"),\r\n                                state: Yup.string().required(\"Required\"),\r\n                              })}\r\n                              onSubmit={async (\r\n                                values,\r\n                                { setSubmitting, resetForm }\r\n                              ) => {\r\n                                setSubmitting(true);\r\n                                const address = user.address\r\n                                  ? user.address\r\n                                  : [];\r\n                                address.push(values);\r\n                                await editUser(user.id, {\r\n                                  address,\r\n                                });\r\n                                // setAddress(values);\r\n                                // setStep(3);\r\n                                resetForm();\r\n                                setSubmitting(false);\r\n                              }}\r\n                            >\r\n                              {(formik) => {\r\n                                console.log(formik);\r\n                                return (\r\n                                  <Form>\r\n                                    <div className=\"row\">\r\n                                      <div className=\"col-md-12 form-group\">\r\n                                        <TextInput\r\n                                          label=\"Address 1\"\r\n                                          name=\"address_1\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"Enter Address 1\"\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"col-md-12 form-group\">\r\n                                        <TextInput\r\n                                          label=\"Address Line 2\"\r\n                                          name=\"address_2\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"Enter Address Line 2\"\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"col-md-12 form-group\">\r\n                                        <TextInput\r\n                                          label=\"Landmark\"\r\n                                          name=\"landmark\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"Enter Landmark\"\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"col-md-12 form-group\">\r\n                                        <TextInput\r\n                                          label=\"City\"\r\n                                          name=\"city\"\r\n                                          type=\"text\"\r\n                                          placeholder=\"Enter City\"\r\n                                        />\r\n                                      </div>\r\n\r\n                                      <div className=\"col-md-12 form-group\">\r\n                                        <SelectBox\r\n                                          label=\"State\"\r\n                                          name=\"state\"\r\n                                          placeholder=\"Enter State\"\r\n                                        >\r\n                                          <option value=\"\">Select State</option>\r\n\r\n                                          <option value=\"Andhra Pradesh\">\r\n                                            Andhra Pradesh\r\n                                          </option>\r\n                                          <option value=\"Arunachal Pradesh\">\r\n                                            Arunachal Pradesh\r\n                                          </option>\r\n                                          <option value=\"Assam\">Assam</option>\r\n                                          <option value=\"Bihar\">Bihar</option>\r\n                                          <option value=\"Chhattisgarh\">\r\n                                            Chhattisgarh\r\n                                          </option>\r\n                                          <option value=\"Goa\">Goa</option>\r\n                                          <option value=\"Gujarat\">\r\n                                            Gujarat\r\n                                          </option>\r\n                                          <option value=\"Haryana\">\r\n                                            Haryana\r\n                                          </option>\r\n                                          <option value=\"Himachal Pradesh\">\r\n                                            Himachal Pradesh\r\n                                          </option>\r\n                                          <option value=\"Jammu and Kashmir\">\r\n                                            Jammu and Kashmir\r\n                                          </option>\r\n                                          <option value=\"Jharkhand\">\r\n                                            Jharkhand\r\n                                          </option>\r\n                                          <option value=\"Karnataka\">\r\n                                            Karnataka\r\n                                          </option>\r\n                                          <option value=\"Kerala\">Kerala</option>\r\n                                          <option value=\"Ladakh\">Ladakh</option>\r\n                                          <option value=\"Madhya Pradesh\">\r\n                                            Madhya Pradesh\r\n                                          </option>\r\n                                          <option value=\"Maharashtra\">\r\n                                            Maharashtra\r\n                                          </option>\r\n                                          <option value=\"Manipur\">\r\n                                            Manipur\r\n                                          </option>\r\n                                          <option value=\"Meghalaya\">\r\n                                            Meghalaya\r\n                                          </option>\r\n                                          <option value=\"Mizoram\">\r\n                                            Mizoram\r\n                                          </option>\r\n                                          <option value=\"Nagaland\">\r\n                                            Nagaland\r\n                                          </option>\r\n                                          <option value=\"Odisha\">Odisha</option>\r\n                                          <option value=\"Punjab\">Punjab</option>\r\n                                          <option value=\"Rajasthan\">\r\n                                            Rajasthan\r\n                                          </option>\r\n                                          <option value=\"Sikkim\">Sikkim</option>\r\n                                          <option value=\"Tamil Nadu\">\r\n                                            Tamil Nadu\r\n                                          </option>\r\n                                          <option value=\"Telangana\">\r\n                                            Telangana\r\n                                          </option>\r\n                                          <option value=\"Tripura\">\r\n                                            Tripura\r\n                                          </option>\r\n                                          <option value=\"Uttarakhand\">\r\n                                            Uttarakhand\r\n                                          </option>\r\n                                          <option value=\"Uttar Pradesh\">\r\n                                            Uttar Pradesh\r\n                                          </option>\r\n                                          <option value=\"West Bengal\">\r\n                                            West Bengal\r\n                                          </option>\r\n                                          <option value=\"Andaman and Nicobar Islands\">\r\n                                            Andaman and Nicobar Islands\r\n                                          </option>\r\n                                          <option value=\"Chandigarh\">\r\n                                            Chandigarh\r\n                                          </option>\r\n                                          <option value=\"Dadra and Nagar Haveli\">\r\n                                            Dadra and Nagar Haveli\r\n                                          </option>\r\n                                          <option value=\" Daman and Diu\">\r\n                                            Daman and Diu\r\n                                          </option>\r\n                                          <option value=\"Delhi\">Delhi</option>\r\n                                          <option value=\"Lakshadeep\">\r\n                                            Lakshadeep\r\n                                          </option>\r\n                                          <option value=\"Pondicherry\">\r\n                                            Pondicherry (Puducherry)\r\n                                          </option>\r\n                                        </SelectBox>\r\n                                      </div>\r\n                                      <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                          <TextInput\r\n                                            label=\"Pin\"\r\n                                            name=\"pincode\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Pin\"\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                          <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-secondary m-3\"\r\n                                          >\r\n                                            <span>\r\n                                              {\"  \"}\r\n                                              {formik.isSubmitting\r\n                                                ? \"Processing...\"\r\n                                                : \"Submit\"}\r\n                                            </span>\r\n                                          </button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </Form>\r\n                                );\r\n                              }}\r\n                            </Formik>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {window.innerWidth > 991 && (\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"your-order\">\r\n                        <h3>Your order</h3>\r\n                        <div>\r\n                          <div className=\"your-order-table table-responsive\">\r\n                            <table className=\"table\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th className=\"product-thumbnail\">&nbsp;</th>\r\n                                  <th className=\"product-name\">Product</th>\r\n                                  <th className=\"product-price\">Price</th>\r\n                                  <th className=\"product-quantity\">Quantity</th>\r\n                                  <th className=\"product-subtotal\">Total</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {cart &&\r\n                                  cart.map((item) => {\r\n                                    return (\r\n                                      <tr>\r\n                                        <td className=\"product-thumbnail\">\r\n                                          {item.featured_image ? (\r\n                                            <img\r\n                                              src={`${URI}${item.featured_image}`}\r\n                                              alt=\"product1\"\r\n                                              style={{\r\n                                                width: \"150px\",\r\n                                                height: \"100px\",\r\n                                                objectFit: \"contain\",\r\n                                              }}\r\n                                            />\r\n                                          ) : (\r\n                                            <img\r\n                                              src=\"/assets/images/products/default.jpg\"\r\n                                              alt=\"product1\"\r\n                                              style={{\r\n                                                width: \"150px\",\r\n                                                height: \"100px\",\r\n                                                objectFit: \"contain\",\r\n                                              }}\r\n                                            />\r\n                                          )}\r\n                                        </td>\r\n                                        <td\r\n                                          className=\"product-name\"\r\n                                          data-title=\"Product\"\r\n                                        >\r\n                                          {\" \"}\r\n                                          {item.name}-{item.size}\r\n                                        </td>\r\n                                        <td\r\n                                          className=\"product-price\"\r\n                                          data-title=\"Price\"\r\n                                        >\r\n                                          Rs{\" \"}\r\n                                          {parseFloat(item.sale_price).toFixed(\r\n                                            2\r\n                                          )}\r\n                                        </td>\r\n                                        <td\r\n                                          className=\"product-quantity\"\r\n                                          data-title=\"Quantity\"\r\n                                        >\r\n                                          <div className=\"quantity\">\r\n                                            {item.quantity}\r\n                                          </div>\r\n                                        </td>\r\n                                        <td\r\n                                          className=\"product-subtotal\"\r\n                                          data-title=\"Total\"\r\n                                        >\r\n                                          Rs{\" \"}\r\n                                          {parseFloat(\r\n                                            item.quantity * item.sale_price\r\n                                          ).toFixed(2)}\r\n                                        </td>\r\n                                      </tr>\r\n                                    );\r\n                                  })}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"table-responsive cart\"\r\n                          style={{ background: \"#fff\" }}\r\n                        >\r\n                          <table className=\"table\">\r\n                            <tbody>\r\n                              <tr>\r\n                                <td className=\"cart_total_label\">\r\n                                  Cart Subtotal\r\n                                </td>\r\n                                <td className=\"cart_total_amount\">\r\n                                  Rs {parseFloat(totalAmount).toFixed(2)}\r\n                                </td>\r\n                              </tr>\r\n\r\n                              <tr>\r\n                                <td className=\"cart_total_label\">Total</td>\r\n                                <td className=\"cart_total_amount\">\r\n                                  <strong>\r\n                                    Rs {parseFloat(totalAmount).toFixed(2)}\r\n                                  </strong>\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {step === 3 && (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\" register-form-content\">\r\n                    <h3 class=\"page-subheading\">3: Select Payment Method</h3>\r\n\r\n                    <div className=\"\" style={{ paddingBottom: \"30px\" }}>\r\n                      <div className=\"order-payment\">\r\n                        <div className=\"payment-method\">\r\n                          <div className=\"form-check mb-5\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"radio\"\r\n                              name=\"exampleRadios\"\r\n                              id=\"exampleRadios1\"\r\n                              defaultValue=\"option1\"\r\n                              defaultChecked\r\n                              onChange={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setPaymentMethod(\"CASH_ON_DELIVERY\");\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"form-check-label\"\r\n                              htmlFor=\"exampleRadios1\"\r\n                            >\r\n                              {\"  \"} Cash On Deliery\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"form-check mb-5\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"radio\"\r\n                              name=\"exampleRadios\"\r\n                              id=\"exampleRadios2\"\r\n                              defaultValue=\"option1\"\r\n                              onChange={(e) => {\r\n                                if (e.target.checked) {\r\n                                  setPaymentMethod(\"RAZORPAY\");\r\n                                }\r\n                              }}\r\n                            />\r\n                            <label\r\n                              className=\"form-check-label\"\r\n                              htmlFor=\"exampleRadios2\"\r\n                            >\r\n                              {\"  \"} Razorpay ( Credit,Debit,UPI,NetBanking)\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-success\"\r\n                              onClick={() => placeOrder()}\r\n                            >\r\n                              <span>\r\n                                {\"  \"}\r\n                                {orderPlaced\r\n                                  ? \"Processing...\"\r\n                                  : \"Place Order\"}{\" \"}\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {window.innerWidth > 991 && (\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"your-order\">\r\n                      <h3>Your order</h3>\r\n                      <div>\r\n                        <div className=\"your-order-table table-responsive\">\r\n                          <table className=\"table\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th className=\"product-thumbnail\">&nbsp;</th>\r\n                                <th className=\"product-name\">Product</th>\r\n                                <th className=\"product-price\">Price</th>\r\n                                <th className=\"product-quantity\">Quantity</th>\r\n                                <th className=\"product-subtotal\">Total</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {cart &&\r\n                                cart.map((item) => {\r\n                                  return (\r\n                                    <tr>\r\n                                      <td className=\"product-thumbnail\">\r\n                                        {item.featured_image ? (\r\n                                          <img\r\n                                            src={`${URI}${item.featured_image}`}\r\n                                            alt=\"product1\"\r\n                                            style={{\r\n                                              width: \"150px\",\r\n                                              height: \"100px\",\r\n                                              objectFit: \"contain\",\r\n                                            }}\r\n                                          />\r\n                                        ) : (\r\n                                          <img\r\n                                            src=\"/assets/images/products/default.jpg\"\r\n                                            alt=\"product1\"\r\n                                            style={{\r\n                                              width: \"150px\",\r\n                                              height: \"100px\",\r\n                                              objectFit: \"contain\",\r\n                                            }}\r\n                                          />\r\n                                        )}\r\n                                      </td>\r\n                                      <td\r\n                                        className=\"product-name\"\r\n                                        data-title=\"Product\"\r\n                                      >\r\n                                        {\" \"}\r\n                                        {item.name}-{item.size}\r\n                                      </td>\r\n                                      <td\r\n                                        className=\"product-price\"\r\n                                        data-title=\"Price\"\r\n                                      >\r\n                                        Rs{\" \"}\r\n                                        {parseFloat(item.sale_price).toFixed(2)}\r\n                                      </td>\r\n                                      <td\r\n                                        className=\"product-quantity\"\r\n                                        data-title=\"Quantity\"\r\n                                      >\r\n                                        <div className=\"quantity\">\r\n                                          {item.quantity}\r\n                                        </div>\r\n                                      </td>\r\n                                      <td\r\n                                        className=\"product-subtotal\"\r\n                                        data-title=\"Total\"\r\n                                      >\r\n                                        Rs{\" \"}\r\n                                        {parseFloat(\r\n                                          item.quantity * item.sale_price\r\n                                        ).toFixed(2)}\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"table-responsive cart\"\r\n                        style={{ background: \"#fff\" }}\r\n                      >\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr>\r\n                              <td className=\"cart_total_label\">\r\n                                Cart Subtotal\r\n                              </td>\r\n                              <td className=\"cart_total_amount\">\r\n                                Rs {parseFloat(totalAmount).toFixed(2)}\r\n                              </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                              <td className=\"cart_total_label\">Total</td>\r\n                              <td className=\"cart_total_amount\">\r\n                                <strong>\r\n                                  Rs {parseFloat(totalAmount).toFixed(2)}\r\n                                </strong>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}{\" \"}\r\n        </div>\r\n      ) : (\r\n        <div style={{ margin: \"20px 0px\" }}>\r\n          <div className=\"container\">\r\n            <div className=\"track-order-page\">\r\n              <p> Your Shopping cart is empty</p>\r\n              <p>\r\n                <Link to={`/`} className=\"btn btn-secondary\">\r\n                  Continue Shopping\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alert: state.alert,\r\n  auth: state.auth,\r\n  cart: state.cart,\r\n\r\n  order: state.order,\r\n});\r\n\r\nconst mapDispatchToProps = { login, register, editUser, getCart };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Formik, Form, useField } from \"formik\";\r\n\r\nimport * as Yup from \"yup\";\r\nexport const SelectBox = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <select className=\"form-control custom-select\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"form-control\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TextInputHorizontal = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <div className=\"col-md-2\">\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n      </div>\r\n      <div className=\"col-md-10\">\r\n        <input className=\"form-control\" {...field} {...props} />\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"text-danger\">{meta.error}</div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TextArea = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <textarea className=\"form-control\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport const RadioButton = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <input type=\"radio\" className=\"form-check-input\" {...field} {...props} />\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CheckBox = ({ children, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input type=\"checkbox\" {...field} {...props} />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n"],"sourceRoot":""}