{"version":3,"sources":["Pages/MyOrders.js","actions/orders.js","components/Form/Form.js","components/MyAccountSidebar.js"],"names":["mapDispatchToProps","editOrder","id","data","history","dispatch","a","api","put","setAlert","type","ORDERS_ERROR","payload","response","errors","message","length","mainError","messages","forEach","error","getOrders","limit","page","sort","q","createdAt_lte","createdAt_gte","RESET_ORDER","start","query","newQ","newLTE","newGTE","get","res","GET_ORDERS","connect","state","alert","auth","order","user","orders","useState","useEffect","searchParams","label","value","Header","Breadcrumb","title","class","className","MyAccountSidebar","style","padding","border","map","index","boxShadow","display","justifyContent","background","orderid","order_status","products","item","src","URI","featured_image","width","height","objectFit","name","quantity","sale_price","alignItems","flex","moment","createdAt","format","address","address_1","address_2","landmark","city","pincode","payment_method","product_total","total_amount","Footer","SelectBox","props","useField","field","meta","htmlFor","touched","TextInput","TextArea","logout","to","href","onClick"],"mappings":"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","file":"static/js/7.31a1c69e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Breadcrumb from \"../components/Breadcrumb\";\r\nimport Footer from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\nimport { Form, Formik, FieldArray } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  TextInput,\r\n  SelectBox,\r\n  TextArea,\r\n  CheckBox,\r\n} from \"../components/Form/Form\";\r\nimport { getOrders, editOrder } from \"../actions/orders\";\r\nimport { changePassword } from \"../actions/auth\";\r\nimport MyAccountSidebar from \"../components/MyAccountSidebar\";\r\nimport moment from \"moment\";\r\nimport { URI } from \"../constants/constants\";\r\nconst MyOrders = ({\r\n  auth: { user },\r\n\r\n  history,\r\n  getOrders,\r\n  editOrder,\r\n\r\n  order: { orders },\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState(\"profile\");\r\n  const [cancelling, setCancelling] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const searchParams = [\r\n        {\r\n          label: \"user\",\r\n          value: user.id,\r\n        },\r\n      ];\r\n      getOrders(1, searchParams);\r\n    }\r\n  }, [user]);\r\n  const cancelOrder = async (order) => {\r\n    setCancelling(true);\r\n    await editOrder(order._id, { order_status: \"cancelled\" });\r\n    const searchParams = [\r\n      {\r\n        label: \"user\",\r\n        value: user.id,\r\n      },\r\n    ];\r\n    getOrders(1, searchParams);\r\n    setCancelling(false);\r\n  };\r\n  const getTimeDiffence = (order) => {\r\n    console.log(\r\n      \"TIME\",\r\n      order.createdAt,\r\n      moment().diff(order.createdAt, \"hours\")\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Breadcrumb title=\"My Orders\" />\r\n      <section class=\" about-us\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <MyAccountSidebar />\r\n            </div>\r\n\r\n            <div className=\"col-md-8 col-sm-12 col-xs-12\">\r\n              <div\r\n                className=\"about-page-cntent\"\r\n                style={{\r\n                  padding: \"30px 0px\",\r\n                  border: \"1px solid #f1f1f1\",\r\n                  padding: \"10px 20px\",\r\n                  margin: \"20px 0px\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <div className=\" create-new-account\">\r\n                    <h3 class=\"page-subheading\">My Orders</h3>\r\n                    {orders && orders.length > 0 ? (\r\n                      orders.map((order, index) => {\r\n                        return (\r\n                          <div\r\n                            className=\"card mb-3\"\r\n                            style={{\r\n                              border: \"1px solid #f1f1f1\",\r\n                              padding: \"20px\",\r\n\r\n                              boxShadow:\r\n                                \"8px 10px 5px 0px rgba(186,168,168,0.52)\",\r\n                            }}\r\n                          >\r\n                            <div className=\"card-header\">\r\n                              <div\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"space-between\",\r\n                                  background: \"#f1f1f1\",\r\n                                  padding: \"10px 10px\",\r\n                                }}\r\n                              >\r\n                                <div>\r\n                                  Orders : <strong> #{order.orderid} </strong>{\" \"}\r\n                                </div>\r\n                                <div>\r\n                                  {\" \"}\r\n                                  Status :{\" \"}\r\n                                  <strong> {order.order_status} </strong>{\" \"}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                              <div className=\"table-responsive\">\r\n                                <table className=\"table table-bordered\">\r\n                                  <thead>\r\n                                    <tr>\r\n                                      <th>Sr</th>\r\n                                      <th>Product Details</th>\r\n                                      <th>Quantity</th>\r\n                                      <th>Price</th>\r\n                                      <th>Sub Total</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {order.products &&\r\n                                      order.products.map((item, index) => {\r\n                                        return (\r\n                                          <tr>\r\n                                            <td> #{index + 1} </td>\r\n                                            <td>\r\n                                              <img\r\n                                                src={`${URI}${item.featured_image}`}\r\n                                                style={{\r\n                                                  width: \"100px\",\r\n                                                  height: \"100px\",\r\n                                                  objectFit: \"contain\",\r\n                                                }}\r\n                                              />\r\n                                              {item.name}\r\n                                            </td>\r\n                                            <td>{item.quantity}</td>\r\n                                            <td>₹{item.sale_price}</td>\r\n                                            <td>\r\n                                              ₹{item.quantity * item.sale_price}\r\n                                            </td>\r\n                                          </tr>\r\n                                        );\r\n                                      })}\r\n                                  </tbody>\r\n                                </table>\r\n                              </div>\r\n                              <div\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"space-between\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              >\r\n                                <div style={{ flex: 1, alignItems: \"center\" }}>\r\n                                  Order Date:{\" \"}\r\n                                  {moment(order.createdAt).format(\r\n                                    \"DD-MMM-YYYY\"\r\n                                  )}\r\n                                  <br />\r\n                                  <strong> Address: </strong>\r\n                                  {order.address && (\r\n                                    <div>\r\n                                      {order.address && order.address.address_1}\r\n                                      , <br />\r\n                                      {order.address && order.address.address_2}\r\n                                      ,\r\n                                      <br />\r\n                                      Landmark:{\" \"}\r\n                                      {order.address && order.address.landmark}\r\n                                      <br />\r\n                                      {order.address &&\r\n                                        order.address.city},{\" \"}\r\n                                      {order.address && order.address.state}\r\n                                      <br />\r\n                                      {order.address && order.address.pincode}\r\n                                      <br />\r\n                                      Payment Mode :{\" \"}\r\n                                      {order.payment_method ===\r\n                                        \"CASH_ON_DELIVERY\" && (\r\n                                        <strong> Cash on delivery </strong>\r\n                                      )}\r\n                                      {order.payment_method === \"RAZORPAY\" && (\r\n                                        <strong> Prepaid </strong>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                  <br />\r\n                                  {/* {order.order_status !== \"cancelled\" &&\r\n                                    moment().diff(order.createdAt, \"hours\") <\r\n                                      48 && (\r\n                                      <button\r\n                                        onClick={() => cancelOrder(order)}\r\n                                        style={{\r\n                                          background: \"#333\",\r\n                                          color: \"#fff\",\r\n                                          border: \"1px solid #333\",\r\n                                        }}\r\n                                      >\r\n                                        {cancelling ? \"Cancelling\" : \"Cancel\"}\r\n                                      </button>\r\n                                    )} */}\r\n                                </div>\r\n                                <div\r\n                                  style={{ flex: 1 }}\r\n                                  className=\" p-3 p-md-4\"\r\n                                >\r\n                                  <div className=\"table-responsive cart\">\r\n                                    <table className=\"table \">\r\n                                      <tbody>\r\n                                        <tr>\r\n                                          <td className=\"cart_total_label\">\r\n                                            Subtotal\r\n                                          </td>\r\n                                          <td className=\"cart_total_amount\">\r\n                                            ₹ {order.product_total}\r\n                                          </td>\r\n                                        </tr>\r\n\r\n                                        {/* <tr>\r\n                                          <td className=\"cart_total_label\">\r\n                                            Coupon Discount\r\n                                          </td>\r\n                                          <td className=\"cart_total_amount\">\r\n                                            -₹ {order.coupon_discount}\r\n                                          </td>\r\n                                        </tr> */}\r\n                                        <tr>\r\n                                          <td className=\"cart_total_label\">\r\n                                            Total\r\n                                          </td>\r\n                                          <td className=\"cart_total_amount\">\r\n                                            <strong>\r\n                                              ₹{order.total_amount}\r\n                                            </strong>\r\n                                          </td>\r\n                                        </tr>\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <div> There are no orders available </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alert: state.alert,\r\n  auth: state.auth,\r\n  order: state.order,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  editOrder,\r\n  getOrders,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyOrders);\r\n","import api from \"../utils/api\";\r\nimport {\r\n  GET_ORDERS,\r\n  TOTAL_ORDERS,\r\n  ADD_ORDER,\r\n  GET_ORDER,\r\n  RESET_ORDER,\r\n  ORDERS_ERROR,\r\n} from \"./types\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n// Get posts\r\nexport const countOrder =\r\n  ({ q, createdAt_lte, createdAt_gte }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      let query = \"/orders/count?\";\r\n      if (q) {\r\n        let newQ = ``;\r\n        newQ += `&_q=${q}`;\r\n        query = query + newQ;\r\n      }\r\n      if (createdAt_lte) {\r\n        let newCreatedAt_gte = ``;\r\n        newCreatedAt_gte += `&createdAt_lte=${createdAt_lte}`;\r\n        query = query + newCreatedAt_gte;\r\n      }\r\n      if (createdAt_gte) {\r\n        let newCreatedAt_gte = ``;\r\n        newCreatedAt_gte += `&createdAt_gte=${createdAt_gte}`;\r\n        query = query + newCreatedAt_gte;\r\n      }\r\n\r\n      let res = await api.get(query);\r\n      dispatch({\r\n        type: TOTAL_ORDERS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ORDERS_ERROR,\r\n        payload: err,\r\n      });\r\n      if (err.response && err.response.data) {\r\n        const errors = err.response.data.message;\r\n        if (errors && errors.length > 0) {\r\n          const mainError = errors[0];\r\n          if (mainError.messages) {\r\n            mainError.messages.forEach((error) =>\r\n              dispatch(setAlert(error.message, \"danger\"))\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n// Get posts\r\nexport const getOrders =\r\n  ({ limit = 10, page = 1, sort = \"DESC\", q, createdAt_lte, createdAt_gte }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: RESET_ORDER,\r\n      });\r\n      if (page) {\r\n        const start = (page - 1) * limit;\r\n        let query = `/orders?_limit=${limit}&_start=${start}&_sort=createdAt:${sort}`;\r\n        if (q) {\r\n          const newQ = `&_q=${q}`;\r\n          query = query + newQ;\r\n        }\r\n        if (createdAt_lte) {\r\n          const newLTE = `&createdAt_lte=${createdAt_lte}`;\r\n          query = query + newLTE;\r\n        }\r\n        if (createdAt_gte) {\r\n          const newGTE = `&createdAt_gte=${createdAt_gte}`;\r\n          query = query + newGTE;\r\n        }\r\n\r\n        const res = await api.get(query);\r\n\r\n        dispatch({\r\n          type: GET_ORDERS,\r\n          payload: res.data,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ORDERS_ERROR,\r\n        payload: err,\r\n      });\r\n      if (err.response && err.response.data) {\r\n        const errors = err.response.data.message;\r\n        if (errors && errors.length > 0) {\r\n          const mainError = errors[0];\r\n          if (mainError.messages) {\r\n            mainError.messages.forEach((error) =>\r\n              dispatch(setAlert(error.message, \"danger\"))\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n// Get posts\r\nexport const getOrder = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_ORDER,\r\n    });\r\n    const res = await api.get(\"/orders/\" + id);\r\n\r\n    dispatch({\r\n      type: GET_ORDER,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDERS_ERROR,\r\n      payload: err,\r\n    });\r\n    if (err.response && err.response.data) {\r\n      const errors = err.response.data.message;\r\n      if (errors && errors.length > 0) {\r\n        const mainError = errors[0];\r\n        if (mainError.messages) {\r\n          mainError.messages.forEach((error) =>\r\n            dispatch(setAlert(error.message, \"danger\"))\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const addOrder = (data, history) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post(`/orders`, data);\r\n\r\n    dispatch(setAlert(\"Order Saved!\", \"success\"));\r\n    dispatch({\r\n      type: ADD_ORDER,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDERS_ERROR,\r\n      payload: err,\r\n    });\r\n    if (err.response && err.response.data) {\r\n      const errors = err.response.data.message;\r\n      if (errors && errors.length > 0) {\r\n        const mainError = errors[0];\r\n        if (mainError.messages) {\r\n          mainError.messages.forEach((error) =>\r\n            dispatch(setAlert(error.message, \"danger\"))\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const editOrder = (id, data, history) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(\"/orders/\" + id, data);\r\n\r\n    dispatch(setAlert(\"Order Updated!\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDERS_ERROR,\r\n      payload: err,\r\n    });\r\n    if (err.response && err.response.data) {\r\n      const errors = err.response.data.message;\r\n      if (errors && errors.length > 0) {\r\n        const mainError = errors[0];\r\n        if (mainError.messages) {\r\n          mainError.messages.forEach((error) =>\r\n            dispatch(setAlert(error.message, \"danger\"))\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Formik, Form, useField } from \"formik\";\r\n\r\nimport * as Yup from \"yup\";\r\nexport const SelectBox = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <select className=\"form-control custom-select\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"form-control\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TextInputHorizontal = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <div className=\"col-md-2\">\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n      </div>\r\n      <div className=\"col-md-10\">\r\n        <input className=\"form-control\" {...field} {...props} />\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"text-danger\">{meta.error}</div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TextArea = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <textarea className=\"form-control\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport const RadioButton = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <input type=\"radio\" className=\"form-check-input\" {...field} {...props} />\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CheckBox = ({ children, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input type=\"checkbox\" {...field} {...props} />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../actions/auth\";\r\nconst MyAccountSidebar = ({ logout }) => {\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"sidebar-widget\"\r\n        style={{\r\n          background: \"none 0px 0px repeat scroll rgb(251, 251, 251)\",\r\n          padding: 10,\r\n        }}\r\n      >\r\n        <div className=\"sidebar-flex\">\r\n          <div className=\"dash\">\r\n            <Link to=\"/my-profile\">Profile</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar-flex\">\r\n          <div className=\"dash\">\r\n            <Link to=\"/my-orders\">My Orders</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar-flex\">\r\n          <div className=\"dash\">\r\n            <Link to=\"/my-address\">My Address</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar-flex\">\r\n          <div className=\"dash\">\r\n            <Link to=\"/change-password\">Change Password</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar-flex\">\r\n          <div className=\"dash\">\r\n            <a href=\"#logout\" onClick={() => logout()}>\r\n              Logout\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = { logout };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountSidebar);\r\n"],"sourceRoot":""}